name: Build Linux Kernel for AARCH64
on: 
  workflow_dispatch:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximum build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192 
          swap-size-mb: 512
          remove-dotnet: true
          remove-android: true
          remove-docker-images: true
          remove-codeql: true
          remove-haskell: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Add dependencies
        run: |
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse" >> /etc/apt/sources.list'
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list'
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list'
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list'
          sudo apt update 
          sudo apt upgrade -y
          sudo apt install -y libunwind-dev
          sudo apt build-dep linux -y
          sudo apt install git build-essential kernel-wedge fakeroot flex bison binutils-dev libssl-dev libelf-dev libslang2-dev libpci-dev libiberty-dev libcap-dev libudev-dev libdw-dev libunwind-dev libncurses-dev libzstd-dev libnuma-dev libbabeltrace-dev default-jre default-jdk linux-cloud-tools-common linux-tools-$(uname -r) pahole kmod bc rsync gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
      - name: Download patch
        run: |
          git clone https://github.com/xanmod/linux-patches.git
      - name: Download kernel
        run: |
          curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.6.4.tar.xz
          tar xvf linux-6.6.4.tar.xz
          rm linux-6.6.4.tar.xz
          mkdir -p release
          mkdir -p release/boot
      - name: Compile
        run: |
          cd linux-6.6.4
          patch -p1 < ../linux-patches/linux-6.6.y-xanmod/net/tcp/cloudflare/0001-tcp-Add-a-sysctl-to-skip-tcp-collapse-processing-whe.patch
          cp ../.config_aarch64 .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j2
          cp arch/arm64/boot/Image ../release/boot/vmlinuz-6.6.4
          cp System.map ../release/boot/System.map-6.6.4
          cp .config ../release/boot/config-6.6.4
          make INSTALL_MOD_PATH=../release modules_install
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg -j2
          cd ..
          mkdir "artifact"
          mv ./*.deb artifact/
      - name: Remove linux image zstd compression for Debian
        run: |
          mkdir -p debian_linux_image
          cp artifact/$(ls artifact | grep linux-image) debian_linux_image/$(ls artifact | grep linux-image)
          cd debian_linux_image
          ar -x $(ls ../artifact | grep linux-image)
          zstd -d control.tar.zst
          zstd -d data.tar.zst
          xz control.tar
          xz data.tar
          rm $(ls ../artifact | grep linux-image)
          ar -rc debian-$(ls ../artifact | grep linux-image) debian-binary control.tar.xz data.tar.xz
          mv debian-$(ls ../artifact | grep linux-image) ../artifact/
          cd ..
          rm -rf debian_linux_image
      - name: Remove linux headers zstd compression for Debian
        run: |
          mkdir -p debian_linux_headers
          cp artifact/$(ls artifact | grep linux-headers) debian_linux_headers/$(ls artifact | grep linux-headers)
          cd debian_linux_headers
          ar -x $(ls ../artifact | grep linux-headers)
          zstd -d control.tar.zst
          zstd -d data.tar.zst
          xz control.tar
          xz data.tar
          rm $(ls ../artifact | grep linux-headers)
          ar -rc debian-$(ls ../artifact | grep linux-headers) debian-binary control.tar.xz data.tar.xz
          mv debian-$(ls ../artifact | grep linux-headers) ../artifact/
          cd ..
          rm -rf debian_linux_headers
      - name: Compress
        run: |
          tar -czvf release.tar.gz release
          mkdir -p action_release
          mv release.tar.gz action_release
      - name: Kernel
        uses: actions/upload-artifact@v3
        with: 
          name: kernel
          path: ${{ github.workspace }}/action_release
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ${{ github.workspace }}/artifact/

        
